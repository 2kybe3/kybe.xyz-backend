name: Backend - Build & Deploy to Production

on:
  push:
    branches:
      - main

env:
  IMAGE: reg.kybe.xyz/kybe-pub/backend
  REGISTRY_URL: reg.kybe.xyz
  TAG: ${{ github.sha }}

jobs:
  deploy-backend:
    name: Build, Push & Deploy Backend
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v5

      - name: Log in to registry
        run: echo "${{ secrets.REGISTRY_PASS }}" | docker login ${{ env.REGISTRY_URL }} -u '${{ vars.REGISTRY_USER }}' --password-stdin

      - name: Build and push image
        run: |
          docker build -t ${{ env.IMAGE }}:${{ env.TAG }} -t ${{ env.IMAGE }}:latest .
          docker push ${{ env.IMAGE }}:${{ env.TAG }}
          docker push ${{ env.IMAGE }}:latest

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ vars.RUNNER_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ vars.SERVER_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: Copy stack file to server
        run: |
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no docker-stack.yml \
              ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }}:/opt/backend/docker-stack.yml

      - name: Deploy on remote server
        if: github.ref == 'refs/heads/main'
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} REGISTRY_PASS="${{ secrets.REGISTRY_PASS }}" << EOF
          set -e
          echo "$REGISTRY_PASS" | docker login ${{ env.REGISTRY_URL }} -u "${{ vars.REGISTRY_USER }}" --password-stdin

          cd /opt/backend
          docker stack deploy -c docker-stack.yml backend
          EOF

      - name: Cleanup
        if: always()
        run: |
          rm -rf ~/.ssh/deploy_key